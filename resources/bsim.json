{
  "name": "CONFIGURATION",
  "uri": "http://bsim.hpi.uni-potsdam.de/scylla/simModel",
  "prefix": "bsim",
  "associations": [],
  "types": [
    {
      "name": "Base",
      "superClass": ["bpmn:Base"]
    },

    {
      "name": "definitions",
      "extends": ["bpmn:Definitions"],
      "properties": [
        {
          "name": "simulationConfiguration",
          "type": "simulationConfiguration",
          "isMany": true,
          "meta": {
            "displayName": "Simulation Configuration"
          }
        },

        {
          "name": "randomSeed",
          "type": "Integer",

          "meta": {
            "displayName": "Random Seed"
          }
        },
        {
          "name": "zoneOffset",
          "type": "String",
          "meta": {
            "displayName": "Timezone Offset"
          }
        },
        {
          "name": "timetables",
          "type": "timetables",
          "meta": {
            "displayName": "Resource Timetables"
          }
        },
        {
          "name": "resourceData",
          "type": "resourceData",
          "meta": {
            "displayName": "Resource Data",
            "description": "Resource data defines which resources exists, how often they exist, what they cost and optionally which timetables they use and which named instances exist (which can differ from their resource type a bit)."
          }
        },
        {
          "name": "resourceAssignmentOrder",
          "type": "String",
          "meta": {
            "displayName": "Resource Assignment Order",
            "description": "one of: simulationTime or priority"
          }
        }
      ]
    },

    {
      "name": "simulationConfiguration",
      "superClass": ["bpmn:RootElement"],
      "properties": [
        {
          "name": "id",
          "type": "String",
          "redefines": "bpmn:BaseElement#bpmn:id",
          "isAttr": true,
          "isId": true,
          "meta": {
            "displayName": "ID"
          }
        },
        {
          "name": "processRef",
          "isReference": true,
          "type": "bpmn:BaseElement",
          "isAttr": true,

          "meta": {
            "displayName": "Referenced Process Id"
          }
        },

        {
          "name": "bpmnElement",
          "isAttr": true,
          "isReference": true,
          "isVirtual": true,
          "type": "bpmn:BaseElement"
        },

        {
          "name": "processInstances",
          "type": "Integer",
          "isAttr": true,
          "meta": {
            "displayName": "# Process Instances",
            "description": "Number of process instances that should be spawned when starting the simulation"
          }
        },
        {
          "name": "startDateTime",
          "type": "String",
          "isAttr": true,
          "meta": {
            "displayName": "Start Date Time"
          }
        },
        {
          "name": "endDateTime",
          "type": "String",
          "isAttr": true,
          "meta": {
            "displayName": "End Date Time",
            "description": "(Optional) Can be specified, if the simulation should be terminated before all instances finish."
          }
        },
        {
          "name": "randomSeed",
          "type": "Long",
          "isAttr": true,
          "meta": {
            "displayName": "Random Seed",
            "description": "Will determine random elements such as task durations, event arrival rates, gateway branching behavior and more."
          }
        },
        {
          "name": "startEvent",
          "type": "startEvent",
          "meta": {
            "displayName": "Start Event",
            "description": "Start Events configure the arrival rate of a BPMN start event."
          }
        },
        {
          "name": "tasks",
          "type": "task",
          "isMany": true,
          "meta": {
            "displayName": "Tasks"
          }
        },
        {
          "name": "dataObjects",
          "type": "dataObject",
          "isMany": true,
          "meta": {
            "displayName": "Data Objects"
          }
        },
        {
          "name": "events",
          "type": "catchEvent",
          "isMany": true,
          "meta": {
            "displayName": "Events"
          }
        },
        {
          "name": "subProcesses",
          "type": "subProcess",
          "isMany": true,
          "meta": {
            "displayName": "Sub Processes"
          }
        },
        {
          "name": "gateways",
          "type": "Gateway",
          "isMany": true,
          "meta": {
            "displayName": "Gateways"
          }
        }
      ]
    },
    {
      "name": "RootElement",
      "isAbstract": true,
      "properties": [
        {
          "name": "id",
          "isAttr": true,
          "isReference": true,
          "type": "bpmn:BaseElement"
        }
      ]
    },
    {
      "name": "GlobalRootElement",
      "isAbstract": true,
      "superClass": ["RootElement"]
    },
    {
      "name": "Gateway",
      "superClass": ["RootElement"],
      "isAbstract": true
    },
    {
      "name": "subProcess",
      "superClass": ["bsim:simulationConfiguration"],
      "properties": [
        {
          "name": "id",
          "isId": true,
          "redefines": "bsim:simulationConfiguration#bsim:id",
          "isReference": true,
          "type": "bpmn:BaseElement",
          "isAttr": true,

          "meta": {
            "displayName": "Referenced Process Id"
          }
        }
      ]
    },
    {
      "name": "startEvent",
      "superClass": ["Event"]
    },
    {
      "name": "exclusiveGateway",
      "meta": {
        "displayName": "Exclusive Gateway",
        "description": "Exclusive gateways use branching probabilities to model the simulation flow. The probabilities in each of the outgoing sequence flows need to add to 100%."
      },
      "superClass": ["Gateway"],
      "properties": [
        {
          "name": "outgoing",
          "type": "outgoingSequenceFlow",
          "isMany": true
        }
      ]
    },
    {
      "name": "outgoingSequenceFlow",
      "properties": [
        {
          "name": "id",

          "isAttr": true,
          "isReference": true,
          "type": "bpmn:sequenceFlow"
        },
        {
          "name": "branchingProbability",
          "type": "branchingProbability"
        }
      ]
    },
    {
      "name": "branchingProbability",
      "meta": {
        "displayName": "Branching Prob."
      },
      "properties": [
        {
          "name": "value",
          "type": "Number",
          "isBody": true,
          "meta": {
            "displayName": "Value",
            "description": "double in [0,1]"
          }
        }
      ]
    },
    {
      "name": "task",
      "meta": {
        "displayName": "Task",
        "description": "Task elements define the configuration for a BPMN task."
      },
      "superClass": ["RootElement"],
      "properties": [
        {
          "name": "name",
          "type": "String",
          "isAttr": true
        },
        {
          "name": "bpmnElement",
          "isAttr": true,
          "isReference": true,
          "isVirtual": true,
          "type": "bpmn:BaseElement"
        },
        {
          "name": "resources",
          "type": "resources"
        },
        {
          "name": "duration",
          "type": "duration"
        },
        {
          "name": "setUpDuration",
          "type": "setUpDuration"
        },
        {
          "name": "boundaryEvents",
          "type": "boundaryEvents"
        }
      ]
    },
    {
      "name": "Task",
      "superClass": ["task"]
    },

    {
      "name": "Event",
      "superClass": ["RootElement"],
      "properties": [
        {
          "name": "arrivalRate",
          "type": "arrivalRate"
        }
      ]
    },

    {
      "name": "boundaryEvent",
      "superClass": ["Event"],
      "meta": {
        "displayName": "Boundary Event",
        "description": "Each BPMN boundary event belongs to one task. The boundary event will be scheduled by his given event probability after its arrival rate if the scheduling time is smaller or equal to the end of the task. ",
        "compatible": [
          "cancelEventDefinition",
          "compensateEventDefinition",
          "conditionalEventDefinition",
          "errorEventDefinition",
          "escalationEventDefinition",
          "linkEventDefinition",
          "messageEventDefinition",
          "signalEventDefinition",
          "terminateEventDefinition"
        ],
        "src": "https://github.com/bptlab/scylla/wiki/BoundaryEvent-Plugin"
      },
      "properties": [
        {
          "name": "name",
          "type": "String",
          "isAttr": true
        },
        {
          "name": "eventProbability",
          "type": "Number",
          "meta": {
            "displayName": "Event Probability",
            "description": "Normally the eventProbability should always be 1, except you have very special claims and you can not regulate it by choosing or modifying the distribution for this boundary event.",
            "src": "https://github.com/bptlab/scylla/wiki/BoundaryEvent-Plugin"
          }
        }
      ]
    },

    {
      "name": "catchEvent",
      "superClass": ["Event"],
      "meta": {
        "displayName": "Boundary Event",
        "description": "Each BPMN boundary event belongs to one task. The boundary event will be scheduled by his given event probability after its arrival rate if the scheduling time is smaller or equal to the end of the task. ",
        "compatible": [
          "cancelEventDefinition",
          "compensateEventDefinition",
          "conditionalEventDefinition",
          "errorEventDefinition",
          "escalationEventDefinition",
          "linkEventDefinition",
          "messageEventDefinition",
          "signalEventDefinition",
          "terminateEventDefinition"
        ],
        "src": "https://github.com/bptlab/scylla/wiki/BoundaryEvent-Plugin"
      }
    },

    {
      "name": "arrivalRate",
      "properties": [
        {
          "name": "timeUnit",
          "type": "TimeUnit",
          "isAttr": true
        },
        {
          "name": "distribution",
          "type": "Distribution"
        }
      ]
    },
    {
      "name": "resources",
      "meta": {
        "displayName": "Assigned Resource",
        "description": "Descibes how many instances of the resource type with the given id are needed to perform the task. If not defined, no resources are assumed."
      },
      "properties": [
        {
          "name": "resource",
          "type": "resource",
          "isMany": true
        }
      ]
    },
    {
      "name": "boundaryEvents",
      "properties": [
        {
          "name": "boundaryEvent",
          "type": "boundaryEvent",
          "isMany": true
        }
      ]
    },
    {
      "name": "timetables",
      "properties": [
        {
          "name": "timetable",
          "type": "timetable",
          "isMany": true
        }
      ]
    },
    {
      "name": "resourceData",
      "properties": [
        {
          "name": "dynamicResource",
          "type": "dynamicResource",
          "isMany": true
        }
      ]
    },
    {
      "name": "timetable",
      "superClass": ["bpmn:BaseElement"],
      "properties": [
        {
          "name": "timetableItem",
          "type": "timetableItem",
          "isMany": true
        }
      ]
    },
    {
      "name": "dynamicResource",
      "superClass": ["bpmn:BaseElement"],
      "meta": {
        "description": "Define a resource type."
      },
      "properties": [
        {
          "name": "name",
          "type": "String",
          "isAttr": true,
          "meta": {
            "displayName": "Name",
            "description": "(Optional) Nice Name for this resource"
          }
        },
        {
          "name": "defaultQuantity",
          "type": "Integer",
          "isAttr": true,
          "meta": {
            "displayName": "Quantity",
            "description": "How many of this resource are available"
          }
        },

        {
          "name": "defaultTimetableId",
          "type": "bsim:timetable",
          "isAttr": true,
          "isReference": true,
          "meta": {
            "displayName": "Timetable",
            "description": "Availability and working hours."
          }
        },
        {
          "name": "defaultCost",
          "type": "Real",
          "isAttr": true,
          "meta": {
            "displayName": "Cost",
            "description": "Cost per time unit"
          }
        },
        {
          "name": "defaultTimeUnit",
          "type": "TimeUnit",
          "isAttr": true,
          "meta": {
            "displayName": "Time Unit",
            "description": "Time Unit to which the cost applies"
          }
        },
        {
          "name": "instances",
          "type": "instance",
          "isMany": true
        },
        {
          "name": "bpmnElement",
          "isAttr": true,
          "isReference": true,
          "isVirtual": true,
          "type": "bpmn:Lane"
        }
      ]
    },
    {
      "name": "instance",
      "meta": {
        "displayName": "Named Instance",
        "description": "These represent named instances that might deviate from their resource type."
      },
      "properties": [
        {
          "name": "name",
          "type": "String",
          "isAttr": true,
          "meta": {
            "displayName": "Name",
            "description": "These represent named instances that might deviate from their resource type."
          }
        },
        {
          "name": "cost",
          "type": "Integer",
          "isAttr": true,
          "meta": {
            "displayName": "Cost",
            "description": "Cost per time unit"
          }
        },
        {
          "name": "timetableId",
          "type": "timetable",
          "isAttr": true,
          "isReference": true,
          "meta": {
            "displayName": "Timetable"
          }
        }
      ]
    },
    {
      "name": "resource",
      "properties": [
        {
          "name": "id",
          "type": "bsim:dynamicResource",
          "isAttr": true,
          "isReference": true
        },
        {
          "name": "amount",
          "type": "Integer",
          "isAttr": true
        },
        {
          "name": "assignmentDefinition",
          "type": "assignmentDefinition"
        }
      ]
    },
    {
      "name": "timetableItem",
      "properties": [
        { "name": "from", "type": "DayOfWeek", "isAttr": true },
        { "name": "to", "type": "DayOfWeek", "isAttr": true },
        { "name": "beginTime", "type": "Number", "isAttr": true },
        { "name": "endTime", "type": "Number", "isAttr": true }
      ]
    },
    {
      "name": "assignmentDefinition",
      "properties": [
        {
          "name": "priority",
          "type": "priority"
        }
      ]
    },
    {
      "name": "priority",
      "properties": [
        {
          "name": "value",
          "type": "Number",
          "isBody": true
        }
      ]
    },

    {
      "name": "dataObject",
      "superClass": ["RootElement"],
      "properties": [
        {
          "name": "name",
          "type": "String",
          "isAttr": true
        },

        {
          "name": "fields",
          "type": "field",
          "isMany": true
        }
      ]
    },

    {
      "name": "field",
      "properties": [
        {
          "name": "name",
          "type": "String",
          "isAttr": true
        },
        {
          "name": "type",
          "type": "Type",
          "isAttr": true
        },
        {
          "name": "distribution",
          "type": "Distribution"
        }
      ]
    },

    {
      "name": "duration",
      "meta": {
        "displayName": "Distribution",
        "description": "Describes how long the task takes. If not defined, no duration is assumed.",
        "src": "https://github.com/bptlab/scylla/wiki/Simulation-Configuration"
      },
      "properties": [
        {
          "name": "timeUnit",
          "type": "TimeUnit",
          "isAttr": true
        },
        {
          "name": "distribution",
          "type": "Distribution"
        }
      ]
    },
    {
      "name": "setUpDuration",
      "meta": {
        "displayName": "Set-Up Duration",
        "description": "Can optionally be defined, works similar to the duration element, but describes the setup duration. If not defined, no setup-duration is assumed."
      },
      "superClass": ["duration"]
    },
    {
      "name": "Distribution",
      "isAbstract": true,
      "meta": {
        "displayName": "Distribution",
        "description": "As the simulation is based on randomness, distributions are used to model it.",
        "src": "https://github.com/bptlab/scylla/wiki/Simulation-Configuration"
      }
    },

    {
      "name": "KeyValueDistribution",
      "isAbstract": true
    },
    {
      "name": "DataTypeDistribution",
      "isAbstract": true
    },
    {
      "name": "DurationDistribution",
      "isAbstract": true
    },

    {
      "name": "binomialDistribution",
      "meta": {
        "displayName": "binomial",
        "description": "Models a binomial distribution",
        "hint_url": "https://en.wikipedia.org/api/rest_v1/page/summary/Binomial_distribution"
      },
      "superClass": [
        "Distribution",
        "DataTypeDistribution",
        "DurationDistribution"
      ],
      "properties": [
        { "name": "probability", "type": "probability" },
        { "name": "amount", "type": "amount" }
      ]
    },
    {
      "name": "normalDistribution",
      "meta": {
        "displayName": "normal",
        "description": "Models a normal distribution",
        "hint_url": "https://en.wikipedia.org/api/rest_v1/page/summary/Normal_distribution"
      },
      "superClass": [
        "Distribution",
        "DataTypeDistribution",
        "DurationDistribution"
      ],
      "properties": [
        { "name": "mean", "type": "mean" },
        { "name": "standardDeviation", "type": "standardDeviation" }
      ]
    },
    {
      "name": "triangularDistribution",
      "meta": {
        "displayName": "triangular",
        "description": "Models a triangular distribution",
        "hint_url": "https://en.wikipedia.org/api/rest_v1/page/summary/Triangular_distribution"
      },
      "superClass": [
        "Distribution",
        "DataTypeDistribution",
        "DurationDistribution"
      ],
      "properties": [
        { "name": "lower", "type": "lower" },
        { "name": "peak", "type": "peak" },
        { "name": "upper", "type": "upper" }
      ]
    },
    {
      "name": "constantDistribution",
      "meta": {
        "displayName": "constant",
        "description": "Constantly returns one value"
      },
      "superClass": [
        "Distribution",
        "DataTypeDistribution",
        "DurationDistribution"
      ],
      "properties": [
        {
          "name": "constantValue",
          "type": "constantValue",
          "meta": { "displayName": "constantly returns one value" }
        }
      ]
    },
    {
      "name": "erlangDistribution",
      "meta": {
        "displayName": "erlang",
        "description": "Models an erlang distribution",
        "hint_url": "https://en.wikipedia.org/api/rest_v1/page/summary/Erlang_distribution"
      },
      "superClass": [
        "Distribution",
        "DataTypeDistribution",
        "DurationDistribution"
      ],
      "properties": [
        { "name": "order", "type": "order" },
        { "name": "mean", "type": "mean" }
      ]
    },
    {
      "name": "arbitraryFiniteProbabilityDistribution",
      "meta": {
        "displayName": "arbitrary finite",
        "description": "Models a distribution onto a finite set of elements"
      },
      "superClass": [
        "Distribution",
        "KeyValueDistribution",
        "DurationDistribution"
      ],
      "properties": [{ "name": "entry", "type": "entry", "isMany": true }]
    },

    {
      "name": "discreteProbabilityDistribution",
      "meta": {
        "displayName": "discrete probability",
        "description": "Models a discrete probability distribution"
      },
      "superClass": [
        "Distribution",
        "KeyValueDistribution",
        "DataTypeDistribution"
      ],
      "properties": [{ "name": "entry", "type": "entry", "isMany": true }]
    },

    {
      "name": "discreteStringProbabilityDistribution",
      "meta": {
        "displayName": "discrete string probability",
        "description": "Models a discrete string probability distribution"
      },
      "superClass": [
        "Distribution",
        "KeyValueDistribution",
        "DataTypeDistribution"
      ],
      "properties": [{ "name": "entry", "type": "entry", "isMany": true }]
    },

    {
      "name": "uniformDistribution",
      "meta": {
        "displayName": "uniform",
        "description": "Models a uniform distribution",
        "hint_url": "https://en.wikipedia.org/api/rest_v1/page/summary/Continuous_uniform_distribution"
      },
      "superClass": [
        "Distribution",
        "DataTypeDistribution",
        "DurationDistribution"
      ],
      "properties": [
        { "name": "lower", "type": "lower" },
        { "name": "upper", "type": "upper" }
      ]
    },
    {
      "name": "exponentialDistribution",
      "meta": {
        "displayName": "exponential",
        "description": "Models an exponential distribution",
        "hint_url": "https://en.wikipedia.org/api/rest_v1/page/summary/Exponential_distribution"
      },
      "superClass": [
        "Distribution",
        "DataTypeDistribution",
        "DurationDistribution"
      ],
      "properties": [{ "name": "mean", "type": "mean" }]
    },
    {
      "name": "poissonDistribution",
      "meta": {
        "displayName": "poisson",
        "description": "Models a poisson distribution",
        "hint_url": "https://en.wikipedia.org/api/rest_v1/page/summary/Poisson_distribution"
      },
      "superClass": [
        "Distribution",
        "DataTypeDistribution",
        "DurationDistribution"
      ],
      "properties": [{ "name": "mean", "type": "mean" }]
    },
    {
      "name": "Value",
      "isAbstract": true,
      "properties": [{ "name": "value", "type": "Number", "isBody": true }]
    },
    {
      "name": "probability",
      "superClass": ["Value"],
      "meta": {
        "displayName": "Prob.",
        "description": "double between 0 and 1"
      }
    },
    {
      "name": "standardDeviation",
      "superClass": ["Value"],
      "meta": {
        "displayName": "std-dev",
        "description": "double > 0"
      }
    },
    {
      "name": "amount",
      "superClass": ["Value"],
      "meta": {
        "displayName": "amount",
        "description": "integer"
      }
    },
    {
      "name": "mean",
      "superClass": ["Value"],
      "meta": {
        "displayName": "mean",
        "description": "(positive) double"
      }
    },
    {
      "name": "order",
      "superClass": ["Value"],
      "meta": {
        "displayName": "order",
        "description": "integer >= 1"
      }
    },
    {
      "name": "lower",
      "superClass": ["Value"],
      "meta": {
        "displayName": "lower",
        "description": "double <= peak (and < upper)"
      }
    },
    {
      "name": "upper",
      "superClass": ["Value"],
      "meta": {
        "displayName": "upper",
        "description": "double > lower (and >= peak)"
      }
    },
    {
      "name": "peak",
      "superClass": ["Value"],
      "meta": {
        "displayName": "peak",
        "description": "double >= lower and <= upper"
      }
    },
    {
      "name": "constantValue",
      "superClass": ["Value"],
      "meta": {
        "displayName": "constant val.",
        "description": "double"
      }
    },
    {
      "name": "entry",
      "properties": [
        {
          "name": "value",
          "type": "String",
          "isAttr": true,
          "meta": {
            "displayName": "value",
            "description": "double (or string)"
          }
        },
        {
          "name": "frequency",
          "type": "String",
          "isAttr": true,
          "meta": {
            "displayName": "frequency",
            "description": "double in [0;1]"
          }
        }
      ]
    }
  ],
  "enumerations": [
    {
      "name": "TimeUnit",
      "literalValues": [
        { "name": "HOURS" },
        { "name": "MINUTES" },
        { "name": "DAYS" },
        { "name": "SECONDS" },
        { "name": "MICROSECONDS" },
        { "name": "MILLISECONDS" },
        { "name": "NANOSECONDS" }
      ]
    },
    {
      "name": "Type",
      "literalValues": [
        { "name": "long" },
        { "name": "double" },
        { "name": "string" },
        { "name": "boolean" }
      ]
    },
    {
      "name": "DayOfWeek",
      "literalValues": [
        { "name": "FRIDAY" },
        { "name": "MONDAY" },
        { "name": "SATURDAY" },
        { "name": "SUNDAY" },
        { "name": "THURSDAY" },
        { "name": "TUESDAY" },
        { "name": "WEDNESDAY" }
      ]
    }
  ]
}
